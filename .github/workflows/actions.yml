name: CI
on:
  schedule:
    - cron: '0 6 * * 0-5'
  workflow_dispatch:
    inputs:
      test_job:
        type: choice
        description: "Jobs to execute"
        default: 'all'
        options:
          - gui
          - jdbc
          - newman
          - all
      allure:
        description: "Generate allure reports"
        required: true
        type: boolean
jobs:
  run_containers_on_VM:
    runs-on: ubuntu-latest
    steps:
      - uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_HOST }}
      - name: ssh connection and start docker containers
        run: ssh valera@${{ secrets.HOST_IP }}
          "./cm selenoid start &
          docker start pdp-postgres &
          exit"

  tests:
    #    strategy:
    #      matrix:
    #        browser: [ chrome, firefox ]
    runs-on: ubuntu-latest
    needs: run_containers_on_VM
    steps:
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: 11
      - name: Checkout project sources
        uses: actions/checkout@v3
      - name: Gradle
        uses: gradle/gradle-build-action@v2
      - name: Execute ${{ github.event.inputs.test_job }} task
        run: ./gradlew clean ${{ github.event.inputs.test_job }} -Dbrowser=chrome
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: build/allure-results
      - name: Run postman collections tests via Newman
        if: ${{ always() && (github.event.inputs.test_job == 'all' || github.event.inputs.test_job == 'newman') }}
      - uses: actions/checkout@master
      - uses: matt-ball/newman-action@master
        with:
           collection: zags.postman_collection.json

  artifact:
    needs: tests
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Get allure results artifacts
        uses: actions/download-artifact@v3
        with:
          name: allure-results

  stop_containers_on_VM:
    runs-on: ubuntu-latest
    needs: tests
    if: always()
    steps:
      - uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_HOST }}
      - name: ssh connection and stop docker containers
        run: ssh valera@${{ secrets.HOST_IP }} "./cm selenoid stop &
          docker stop pdp-postgres"

  generate_allure_results:
    runs-on: ubuntu-latest
    needs: artifact
    if: ${{ always() && (github.event.inputs.allure == 'true') }}
    steps:
      - name: Get artifact id
        run: |
          ID=$(curl \
                -H "Accept:application/vnd.github+json" \
                -H "Authorization:Bearer ${{ secrets.TOKEN }}" \
                -H "X-GitHub-Api-Version:2022-11-28" \
                https://api.github.com/repos/${{ secrets.OWNER }}/${{ secrets.PROJECT }}/actions/artifacts | jq -r '.artifacts[0].id')
          echo "id=$ID" >> $GITHUB_ENV
          echo $ID
      - uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_HOST }}
      - name: Download artifact
        run: ssh
          valera@${{ secrets.HOST_IP }} "curl \\
              -H \"Accept:application/vnd.github+json\" \\
              -H \"Authorization:Bearer ${{ secrets.TOKEN }}\" \\
              -H \"X-GitHub-Api-Version:2022-11-28\" \\
              -L -o allure-results.zip \\
              https://api.github.com/repos/${{ secrets.OWNER }}/${{ secrets.PROJECT }}/actions/artifacts/${{ env.id }}/zip"
      - name: Clear results folder
        run: ssh valera@${{ secrets.HOST_IP }} "rm -rf allure-results/**"
      - name: Unzip into results folder
        run: ssh valera@${{ secrets.HOST_IP }} "unzip -f allure-results.zip -d allure-results"
      - name: Generate Allure report
        run: curl http://{{ secrets.HOST_IP }}:5050/generate-report
