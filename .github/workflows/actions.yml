name: CI
on:
  #  push:
  workflow_dispatch:
    inputs:
      test_job:
        type: choice
        description: "Jobs to execute"
        options:
          - gui
          - jdbc
          - postman
          - all
      allure:
        description: "Generate allure reports"
        required: true
        type: boolean
jobs:
#  run_containers_on_VM:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: shimataro/ssh-key-action@v2
#        with:
#          key: ${{ secrets.PRIVATE_KEY }}
#          known_hosts: ${{ secrets.SSH_HOST }}
#      - name: ssh connection and start docker containers
#        run: ssh valera@${{ secrets.HOST_IP }}
#          "./cm selenoid start &
#          docker start pdp-postgres &
#          exit"
#  tests:
#    #    strategy:
#    #      matrix:
#    #        browser: [ chrome, firefox ]
#    runs-on: ubuntu-latest
#    needs: run_containers_on_VM
#    steps:
#      - name: Setup java
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'adopt'
#          java-version: 11
#      - name: Checkout project sources
#        uses: actions/checkout@v3
#      - name: Gradle
#        uses: gradle/gradle-build-action@v2
#      - name: Execute ${{ github.event.inputs.test_job }} task
#        run: ./gradlew clean ${{ github.event.inputs.test_job }} -Dbrowser=chrome
#      - name: Generate allure report
#        if: ${{ (success() || failure()) && (github.event.inputs.allure == 'true') }}
#        run: echo "WTF"
#      - name: Upload artifacts
#        if: always()
#        uses: actions/upload-artifact@v3
#        with:
#          name: allure-results
#          path: build/allure-results
#
#  artifact:
#    needs: tests
#    runs-on: ubuntu-latest
#    if: always()
#    steps:
#      - name: Get allure results artifacts
#        uses: actions/download-artifact@v3
#        with:
#          name: allure-results
#
#  stop_containers_on_VM:
#    runs-on: ubuntu-latest
#    needs: tests
#    if: always()
#    steps:
#      - uses: shimataro/ssh-key-action@v2
#        with:
#          key: ${{ secrets.PRIVATE_KEY }}
#          known_hosts: ${{ secrets.SSH_HOST }}
#      - name: ssh connection and stop docker containers
#        run: ssh valera@${{ secrets.HOST_IP }} "./cm selenoid stop &
#          docker stop pdp-postgres &
#          exit"

   generate_allure_results:
    runs-on: ubuntu-latest
#    needs: artifact
    if: ${{ always() && (github.event.inputs.allure == 'true') }}
    steps:
      - name: Get id
        run: |
            ID=$(curl \
                  -H "Accept:application/vnd.github+json" \
                  -H "Authorization:Bearer ${{ secrets.TOKEN }}" \
                  -H "X-GitHub-Api-Version:2022-11-28" \
                  https://api.github.com/repos/${{ secrets.OWNER }}/${{ secrets.PROJECT }}/actions/artifacts | jq -r '.artifacts[0].id')
            echo "id=$ID" >> $GITHUB_ENV
            echo $ID
      - uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_HOST }}
      - name: Download artifact
        run: ssh valera@${{ secrets.HOST_IP }} "curl \
              -H "Accept:application/vnd.github+json"  \
              -H "Authorization:Bearer ${{ secrets.TOKEN }}" \ 
              -H "X-GitHub-Api-Version:2022-11-28" \
              -L -o allure-results.zip https://api.github.com/repos/${{ secrets.OWNER }}/${{ secrets.PROJECT }}/actions/artifacts/${{ env.id }}/zip"
  #    - name: Echo id
 #       run: ssh valera@${{ secrets.HOST_IP }}  "WTF=35456 & echo '$WTF' & echo "What is $WTF" "                                                   https://api.github.com/repos/ValeraZhukevich/middle-pdp/actions/artifacts/557452728/zip
#          "curl -H "Accept:application/vnd.github+json" -H "Authorization:Bearer ${{ secrets.TOKEN }}" -H "X-GitHub-Api-Version:2022-11-28" https://api.github.com/repos/ValeraZhukevich/middle-pdp/actions/artifacts/563151698/zip"
        

#  generate_allure_results:
#    runs-on: ubuntu-latest
##    needs: artifact
#    if: ${{ always() && (github.event.inputs.allure == 'true') }}
#    steps:
#      - uses: shimataro/ssh-key-action@v2
#        with:
#          key: ${{ secrets.PRIVATE_KEY }}
#          known_hosts: ${{ secrets.SSH_HOST }}
#      - name: Get artifact id
#        run: ssh valera@${{ secrets.HOST_IP }} "ID=$( curl -H "Accept:application/vnd.github+json" \
#                      -H "Authorization:Bearer  ${{ secrets.TOKEN }}" \
#                      -H "X-GitHub-Api-Version:2022-11-28" \
#                      "https://api.github.com/repos/${{ secrets.OWNER }}/${{ secrets.PROJECt }}/actions/artifacts" | jq -r '.artifacts[0].id' ) & echo $ID & pwd"
#      - name: ls
#        run: ssh valera@${{ secrets.HOST_IP }} "ls"
#      - name: ID
#        run: ssh valera@${{ secrets.HOST_IP }} "echo $ID"
#      - name: Download zip
#        run: ssh valera@${{ secrets.HOST_IP }} "curl \
#                      -H "Accept:application/vnd.github+json" \
#                      -H "Authorization:Bearer ${{ secrets.TOKEN }}" \
#                      -H "X-GitHub-Api-Version:2022-11-28" \
#                      -L -o allure-results.zip "https://api.github.com/repos/${{ secrets.OWNER }}/${{ secrets.PROJECT }}/actions/artifacts/563151698/zip" "




