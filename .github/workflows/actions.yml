name: CI
on:
#  schedule:
#    - cron: '0 6 * * 0-5'
  workflow_dispatch:
    inputs:
      test_job:
        type: choice
        description: "Jobs to execute"
        default: 'all'
        options:
          - gui
          - jdbc
          - newman
          - ðŸ¥’
          - all
      allure:
        description: "Generate allure reports"
        required: true
        type: boolean
jobs:
  run_containers_on_VM:
    runs-on: ubuntu-latest
    steps:
      - uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_HOST }}
      - name: ssh connection and start docker containers
        run:  ssh valera@${{ secrets.HOST_IP }} "./cm selenoid start & docker start pdp-postgres"

  stop_newman_server:
    if: ${{ github.event.inputs.newman == 'true' || github.event.inputs.newman == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_HOST }}
      - name: Stop Newman report docker container
        run: ssh valera@${{ secrets.HOST_IP }} "docker stop newman-report"
      - name: Remove docker container and image of NGINX server
        run: ssh valera@${{ secrets.HOST_IP }} "docker image rm html & docker rm newman-report"

  tests:
    runs-on: ubuntu-latest
    needs: run_containers_on_VM
    continue-on-error: true
    steps:
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: 11

      - name: Checkout project sources
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        id: cache-primes
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-primes.outputs.cache-hit != 'true'
        run: |
          npm install -g newman
          npm install -g newman-reporter-htmlextra

      - name: Gradle
        uses: gradle/gradle-build-action@v2

      - name: Execute GUI task
        if: ${{ github.event.inputs.test_job == 'gui' || github.event.inputs.test_job == 'all' }}
        run: ./gradlew gui

      - name: Execute CUCUMBER task
        if: ${{ github.event.inputs.test_job == 'ðŸ¥’' || github.event.inputs.test_job == 'all' }}
        run: ./gradlew cucumber

      - name: Execute JDBC task
        if: ${{ github.event.inputs.test_job == 'jdbc' || github.event.inputs.test_job == 'all' }}
        run: ./gradlew jdbc

      - name: Install and run Newman
        if: ${{ github.event.inputs.test_job == 'newman' || github.event.inputs.test_job == 'all' }}
        run:
          newman run "zags.postman_collection.json" -r htmlextra --reporter-htmlextra-export build/allure-results/newman_report.html

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: build/allure-results/

  artifact:
    needs: tests
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Get allure results artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts

  stop_containers_on_VM:
    runs-on: ubuntu-latest
    needs: tests
    if: always()
    steps:
      - uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_HOST }}
      - name: ssh connection and stop docker containers
        run: ssh valera@${{ secrets.HOST_IP }} "./cm selenoid stop &
          docker stop pdp-postgres"

  generate_reports:
    runs-on: ubuntu-latest
    needs: artifact
    if: ${{ always() && (github.event.inputs.allure == 'true') }}
    steps:
      - name: Get artifact id
        run: |
          ID=$(curl \
                -H "Accept:application/vnd.github+json" \
                -H "Authorization:Bearer ${{ secrets.TOKEN }}" \
                -H "X-GitHub-Api-Version:2022-11-28" \
                https://api.github.com/repos/${{ secrets.OWNER }}/${{ secrets.PROJECT }}/actions/artifacts | jq -r '.artifacts[0].id')
          echo "id=$ID" >> $GITHUB_ENV
          echo $ID

      - uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_HOST }}
      - name: Download artifact
        run: |
          ssh valera@${{ secrets.HOST_IP }} "curl -H \"Accept:application/vnd.github+json\" -H \"Authorization:Bearer ${{ secrets.TOKEN }}\" -H \"X-GitHub-Api-Version:2022-11-28\" -L -o artifacts.zip https://api.github.com/repos/${{ secrets.OWNER }}/${{ secrets.PROJECT }}/actions/artifacts/${{ env.id }}/zip"
          ssh valera@${{ secrets.HOST_IP }} "rm -rf allure-results/**"
          ssh valera@${{ secrets.HOST_IP }} "unzip artifacts.zip -d allure-results"

      - name: Run NEWMAN REPORT server
        if: ${{ github.event.inputs.test_job == 'newman' || github.event.inputs.test_job == 'all' }}
        run: |
          ssh valera@${{ secrets.HOST_IP }} "mv -i allure-results/newman_report.html newman/index.html"
          ssh valera@${{ secrets.HOST_IP }} "docker build -t html newman"
          ssh valera@${{ secrets.HOST_IP }} "docker run --name newman-report -p 8082:80 -d html"

      - name: Generate Allure report
        run: curl http://${{ secrets.HOST_IP }}:5050/generate-report
